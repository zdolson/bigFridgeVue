{"remainingRequest":"/Users/zachary/Documents/Projects/big-fridge-vue/node_modules/babel-loader/lib/index.js!/Users/zachary/Documents/Projects/big-fridge-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zachary/Documents/Projects/big-fridge-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zachary/Documents/Projects/big-fridge-vue/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zachary/Documents/Projects/big-fridge-vue/src/App.vue","mtime":1539726931357},{"path":"/Users/zachary/Documents/Projects/big-fridge-vue/node_modules/cache-loader/dist/cjs.js","mtime":1539726978099},{"path":"/Users/zachary/Documents/Projects/big-fridge-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zachary/Documents/Projects/big-fridge-vue/node_modules/cache-loader/dist/cjs.js","mtime":1539726978099},{"path":"/Users/zachary/Documents/Projects/big-fridge-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.values\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.set\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vue from 'vue';\nimport d0 from './data/data-0.json';\nimport d1 from './data/data-1.json';\nimport d2 from './data/data-2.json';\nimport d3 from './data/data-3.json';\nimport d4 from './data/data-4.json';\nimport d5 from './data/data-5.json';\nimport d6 from './data/data-6.json';\nimport d7 from './data/data-7.json';\nimport d8 from './data/data-8.json';\nimport d9 from './data/data-9.json';\nimport { library, dom } from '@fortawesome/fontawesome-svg-core';\nimport { faCoffee, faSkull, faSearch, faThumbsUp, faSort, faFilter, faPlus, faSortAlphaUp, faSortAlphaDown, faSortNumericUp, faSortNumericDown, faSlash } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\nlibrary.add(faCoffee, faSkull, faSearch, faThumbsUp, faSort, faSortAlphaUp, faSortAlphaDown, faSortNumericUp, faSortNumericDown, faFilter, faPlus, faSlash);\ndom.watch();\nvar fridge = [];\nvar aggregationObject = {};\nvar filterObject = {\n  'filterOrder': []\n};\nvar currentTab = 'searchbar';\nvar searchResult = [];\nvar searchQuery = '';\nvar numExpired = 0;\nvar display = 100;\nvar nameSet = new Set();\nvar storeSet = new Set();\nvar typeSet = new Set();\nvar collator = new Intl.Collator(undefined, {\n  numeric: true,\n  sensitivity: 'base'\n});\nvar reverseFlags = {};\nvar wipeChildState = false;\nvar aggregateFlag = false;\nexport default {\n  name: 'app',\n  components: {\n    'font-awesome-icon': FontAwesomeIcon,\n    'tab-searchbar': function tabSearchbar() {\n      return import('./components/TableView');\n    }\n  },\n  data: function data() {\n    return {\n      fridge: fridge,\n      filterObject: filterObject,\n      searchResult: searchResult,\n      searchQuery: searchQuery,\n      currentTab: currentTab,\n      numExpired: numExpired,\n      nameSet: nameSet,\n      storeSet: storeSet,\n      typeSet: typeSet,\n      searchIcon: \"\\uF002\",\n      display: display,\n      reverseFlags: reverseFlags,\n      wipeChildState: wipeChildState,\n      aggregateFlag: aggregateFlag,\n      aggregationObject: aggregationObject\n    };\n  },\n  created: function created() {\n    var files = [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9];\n\n    for (var _i = 0; _i < files.length; _i++) {\n      var file = files[_i];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = file[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n          var parsedPurchaseDate = {\n            year: item.purchaseDate.substring(0, 4),\n            month: item.purchaseDate.substring(5, 7),\n            day: item.purchaseDate.substring(8, 10),\n            ymd: item.purchaseDate.substring(0, 10)\n          };\n          var parsedExpirationDate = {\n            year: item.expirationDate.substring(0, 4),\n            month: item.expirationDate.substring(5, 7),\n            day: item.expirationDate.substring(8, 10),\n            ymd: item.expirationDate.substring(0, 10)\n          };\n          var expiredFlag = false;\n          var yearCheck = parsedPurchaseDate.year > parsedExpirationDate.year;\n          var monthCheck = parsedPurchaseDate.month > parsedExpirationDate.month;\n          var dayCheck = parsedPurchaseDate.day > parsedExpirationDate.day;\n\n          if (yearCheck) {\n            expiredFlag = true;\n            this.numExpired++;\n          } else if (parsedPurchaseDate.year == parsedExpirationDate.year && monthCheck) {\n            expiredFlag = true;\n            this.numExpired++;\n          } else if (parsedPurchaseDate.year == parsedExpirationDate.year && parsedPurchaseDate.month == parsedExpirationDate.month && dayCheck) {\n            expiredFlag = true;\n            this.numExpired++;\n          }\n\n          this.fridge.push({\n            name: item.name,\n            type: item.type,\n            store: item.store,\n            purchaseDate: item.purchaseDate.substring(0, 10),\n            expirationDate: item.expirationDate.substring(0, 10),\n            quantity: item.quantity,\n            expired: expiredFlag\n          });\n          nameSet.add(item.name.toLowerCase());\n          storeSet.add(item.store.toLowerCase());\n          typeSet.add(item.type.toLowerCase());\n\n          if (!this.aggregationObject.hasOwnProperty(parsedPurchaseDate.ymd)) {\n            this.aggregationObject[parsedPurchaseDate.ymd] = {};\n            this.aggregationObject[parsedPurchaseDate.ymd][item.name] = {\n              name: item.name,\n              type: item.type,\n              store: '-',\n              purchaseDate: parsedPurchaseDate.ymd,\n              expirationDate: '-',\n              quantity: item.quantity,\n              expired: '-'\n            };\n          } else {\n            if (this.aggregationObject[parsedPurchaseDate.ymd].hasOwnProperty(item.name)) {\n              this.aggregationObject[parsedPurchaseDate.ymd][item.name].quantity += item.quantity;\n            } else {\n              this.aggregationObject[parsedPurchaseDate.ymd][item.name] = {\n                name: item.name,\n                type: item.type,\n                store: '-',\n                purchaseDate: parsedPurchaseDate.ymd,\n                expirationDate: '-',\n                quantity: item.quantity,\n                expired: '-'\n              };\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n\n    this.searchResult = this.fridge;\n    this.reverseFlags = Object.assign({}, this.reverseFlags, {\n      name: false,\n      type: false,\n      store: false,\n      purchaseDate: false,\n      expirationDate: false,\n      quantity: false,\n      expired: false\n    });\n  },\n  mounted: function mounted() {\n    document.getElementById('infScroll').addEventListener('scroll', this.scroll);\n  },\n  destroyed: function destroyed() {\n    document.getElementById('infScroll').removeEventListener('scroll', this.scroll);\n  },\n  methods: {\n    objectPropsToArray: function objectPropsToArray(inputObject, currentLevel) {\n      if (Array.isArray(inputObject)) {\n        return inputObject;\n      }\n\n      if (inputObject.hasOwnProperty('expired')) {\n        return [inputObject];\n      }\n\n      var inputAsArray = [];\n      var filterType = this.filterObject['filterOrder'][currentLevel];\n\n      if (this.reverseFlags[filterType]) {\n        currentLevel++;\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = Object.keys(inputObject).sort(collator.compare).reverse()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var property = _step2.value;\n\n            if (!Array.isArray(property)) {\n              inputAsArray = inputAsArray.concat(this.objectPropsToArray(inputObject[property], currentLevel));\n            } else {\n              inputAsArray = inputAsArray.concat(inputObject[property]);\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      } else {\n        currentLevel++;\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n          for (var _iterator3 = Object.keys(inputObject).sort(collator.compare)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var _property = _step3.value;\n\n            if (!Array.isArray(_property)) {\n              if (Object.values(_property)) inputAsArray = inputAsArray.concat(this.objectPropsToArray(inputObject[_property], currentLevel));\n            } else {\n              inputAsArray = inputAsArray.concat(inputObject[_property]);\n            }\n          }\n        } catch (err) {\n          _didIteratorError3 = true;\n          _iteratorError3 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n              _iterator3.return();\n            }\n          } finally {\n            if (_didIteratorError3) {\n              throw _iteratorError3;\n            }\n          }\n        }\n      }\n\n      return inputAsArray;\n    },\n    clearAllFilters: function clearAllFilters() {\n      this.filterObject['filterOrder'].splice(0);\n      this.searchQuery = '';\n      this.display = 100;\n      this.wipeChildState = true;\n      this.aggregateFlag = false;\n      this.sliced = this.fridge;\n    },\n    processAggregate: function processAggregate() {\n      this.aggregateFlag = true;\n    },\n    processSortEvent: function processSortEvent(inputEvent) {\n      this.reverseFlags[inputEvent.from] = inputEvent.state == 0 ? true : false;\n    },\n    processFilterEvent: function processFilterEvent(inputEvent) {\n      if (this.filterObject['filterOrder'].length == 0) {\n        this.filterObject['filterOrder'] = [inputEvent];\n        return;\n      } else {\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n          for (var _iterator4 = this.filterObject['filterOrder'][Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n            var i = _step4.value;\n\n            if (inputEvent == i) {\n              return;\n            }\n          }\n        } catch (err) {\n          _didIteratorError4 = true;\n          _iteratorError4 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n              _iterator4.return();\n            }\n          } finally {\n            if (_didIteratorError4) {\n              throw _iteratorError4;\n            }\n          }\n        }\n\n        this.filterObject['filterOrder'].push(inputEvent);\n      }\n    },\n    broadFilter: function broadFilter(inputArray, particularFilter) {\n      var filteredObject = {};\n\n      if (Array.isArray(inputArray)) {\n        var _iteratorNormalCompletion5 = true;\n        var _didIteratorError5 = false;\n        var _iteratorError5 = undefined;\n\n        try {\n          for (var _iterator5 = inputArray[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n            var item = _step5.value;\n\n            if (!filteredObject.hasOwnProperty(item[particularFilter])) {\n              filteredObject[item[particularFilter]] = [item];\n            } else {\n              filteredObject[item[particularFilter]].push(item);\n            }\n          }\n        } catch (err) {\n          _didIteratorError5 = true;\n          _iteratorError5 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n              _iterator5.return();\n            }\n          } finally {\n            if (_didIteratorError5) {\n              throw _iteratorError5;\n            }\n          }\n        }\n      } else {\n        for (var property in inputArray) {\n          filteredObject[property] = this.broadFilter(inputArray[property], particularFilter);\n        }\n      }\n\n      return filteredObject;\n    },\n    filterManager: function filterManager() {\n      var overrideArray = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var filtered = [];\n      var tempFiltered = {};\n      var hasBeenFiltered = false;\n      var overrideFlag = false;\n      var numberFiltersApplied = 0;\n\n      if (overrideArray.length > 0) {\n        overrideFlag = true;\n      }\n\n      if (this.filterObject['filterOrder'].length == 0) {\n        if (overrideFlag) {\n          filtered = overrideArray;\n        } else {\n          filtered = this.fridge;\n        }\n\n        return filtered;\n      }\n\n      while (this.filterObject['filterOrder'].length - numberFiltersApplied > 0) {\n        var filterType = this.filterObject['filterOrder'][numberFiltersApplied];\n\n        if (!hasBeenFiltered) {\n          if (overrideFlag) {\n            tempFiltered = this.broadFilter(overrideArray, filterType);\n          } else {\n            tempFiltered = this.broadFilter(this.fridge, filterType);\n          }\n\n          hasBeenFiltered = true;\n        } else {\n          for (var property in tempFiltered) {\n            var tempProp = this.broadFilter(tempFiltered[property], filterType);\n            Vue.set(tempFiltered, property, tempProp);\n          }\n        }\n\n        numberFiltersApplied++;\n      }\n\n      filtered = this.objectPropsToArray(tempFiltered, 0);\n      return filtered;\n    },\n    updateTab: function updateTab(newTab) {\n      this.currentTab = newTab;\n    },\n    scroll: function scroll() {\n      var element = document.getElementById('infScroll');\n      var offset = 300;\n\n      if (element.clientHeight + element.scrollTop >= element.scrollHeight - offset) {\n        this.display = this.display + 20;\n      }\n    }\n  },\n  computed: {\n    sliced: {\n      get: function get() {\n        return this.filterManager(this.searchResult).slice(0, this.display);\n      },\n      set: function set(inputArray) {\n        this.searchResult = inputArray;\n      }\n    },\n    currentTabComponent: function currentTabComponent() {\n      return 'tab-' + this.currentTab;\n    }\n  },\n  watch: {\n    searchQuery: function searchQuery() {\n      var lowerSQ = this.searchQuery.toLowerCase();\n      var searchSubset = {};\n\n      if (lowerSQ.length == 0) {\n        this.sliced = this.fridge;\n      } else if (this.nameSet.has(lowerSQ)) {\n        var _iteratorNormalCompletion6 = true;\n        var _didIteratorError6 = false;\n        var _iteratorError6 = undefined;\n\n        try {\n          for (var _iterator6 = this.fridge[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n            var item = _step6.value;\n\n            if (item.name.toLowerCase() == lowerSQ) {\n              if (!searchSubset.hasOwnProperty(item.name.toLowerCase())) {\n                searchSubset[item.name.toLowerCase()] = [item];\n              } else {\n                searchSubset[item.name.toLowerCase()].push(item);\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError6 = true;\n          _iteratorError6 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n              _iterator6.return();\n            }\n          } finally {\n            if (_didIteratorError6) {\n              throw _iteratorError6;\n            }\n          }\n        }\n\n        this.sliced = searchSubset[lowerSQ];\n      } else if (this.storeSet.has(lowerSQ)) {\n        var _iteratorNormalCompletion7 = true;\n        var _didIteratorError7 = false;\n        var _iteratorError7 = undefined;\n\n        try {\n          for (var _iterator7 = this.fridge[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n            var _item = _step7.value;\n\n            if (_item.store.toLowerCase() == lowerSQ) {\n              if (!searchSubset.hasOwnProperty(_item.store.toLowerCase())) {\n                searchSubset[_item.store.toLowerCase()] = [_item];\n              } else {\n                searchSubset[_item.store.toLowerCase()].push(_item);\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError7 = true;\n          _iteratorError7 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n              _iterator7.return();\n            }\n          } finally {\n            if (_didIteratorError7) {\n              throw _iteratorError7;\n            }\n          }\n        }\n\n        this.sliced = searchSubset[lowerSQ];\n      } else if (this.typeSet.has(lowerSQ)) {\n        var _iteratorNormalCompletion8 = true;\n        var _didIteratorError8 = false;\n        var _iteratorError8 = undefined;\n\n        try {\n          for (var _iterator8 = this.fridge[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n            var _item2 = _step8.value;\n\n            if (_item2.type.toLowerCase() == lowerSQ) {\n              if (!searchSubset.hasOwnProperty(_item2.type.toLowerCase())) {\n                searchSubset[_item2.type.toLowerCase()] = [_item2];\n              } else {\n                searchSubset[_item2.type.toLowerCase()].push(_item2);\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError8 = true;\n          _iteratorError8 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n              _iterator8.return();\n            }\n          } finally {\n            if (_didIteratorError8) {\n              throw _iteratorError8;\n            }\n          }\n        }\n\n        this.sliced = searchSubset[lowerSQ];\n      } else {// console.log('no matching search item :(');\n      }\n    },\n    aggregateFlag: function aggregateFlag() {\n      if (this.aggregateFlag) {\n        this.sliced = this.objectPropsToArray(this.aggregationObject, 0);\n      }\n    }\n  }\n};",{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"app\">\n      <div class=\"nav\">\n          <p class=\"proj-title\">Big Fridge</p>\n          <div class=\"search-bar\">\n              <span\n                class=\"icon\"\n                ><i\n                    class=\"fa fa-search\"\n                    style=\"color:black;\"\n                ></i>\n              </span>\n              <input\n                type=\"text\"\n                v-model.lazy=\"searchQuery\"\n                placeholder=\"Name, Store, Type...\">\n          </div>\n          <button\n            class=\"clear-filter\"\n            @click=\"clearAllFilters\"\n            >Clear Filters <i\n                class=\"fas fa-filter\"\n            ></i>\n          </button>\n          <span class=\"caution-span\"><b>Caution: {{numExpired}} items have expired!</b></span>\n      </div>\n      <div class=\"container\" id=\"infScroll\">\n          <component\n            v-if=\"currentTab=='searchbar'\"\n            :is=\"currentTabComponent\"\n            :inputArray=\"sliced\"\n            :clear=\"wipeChildState\"\n            class=\"tab\"\n            @apply-filter=\"processFilterEvent($event)\"\n            @apply-sort=\"processSortEvent($event)\"\n            @apply-aggregate=\"processAggregate()\"\n            @wiped-states=\"wipeChildState = false\"\n          ></component>\n      </div>\n  </div>\n</template>\n<script>\nimport Vue from 'vue'\n\nimport d0 from './data/data-0.json'\nimport d1 from './data/data-1.json'\nimport d2 from './data/data-2.json'\nimport d3 from './data/data-3.json'\nimport d4 from './data/data-4.json'\nimport d5 from './data/data-5.json'\nimport d6 from './data/data-6.json'\nimport d7 from './data/data-7.json'\nimport d8 from './data/data-8.json'\nimport d9 from './data/data-9.json'\n\nimport { library, dom } from '@fortawesome/fontawesome-svg-core'\nimport {\n    faCoffee, faSkull, faSearch, faThumbsUp, faSort, faFilter, faPlus,\n    faSortAlphaUp, faSortAlphaDown, faSortNumericUp, faSortNumericDown,\n    faSlash\n} from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\n\nlibrary.add(\n    faCoffee, faSkull, faSearch, faThumbsUp, faSort, faSortAlphaUp,\n    faSortAlphaDown, faSortNumericUp, faSortNumericDown, faFilter,\n    faPlus, faSlash\n);\ndom.watch();\n\nvar fridge = [];\nvar aggregationObject = {};\nvar filterObject = {\n    'filterOrder': []\n};\nvar currentTab = 'searchbar';\nvar searchResult = [];\nvar searchQuery = '';\nvar numExpired = 0;\nvar display = 100;\nvar nameSet = new Set();\nvar storeSet = new Set();\nvar typeSet = new Set();\nvar collator = new Intl.Collator(undefined, {numeric: true, sensitivity: 'base'});\nvar reverseFlags = {};\nvar wipeChildState = false;\nvar aggregateFlag = false;\n\nexport default {\n  name: 'app',\n  components: {\n      'font-awesome-icon': FontAwesomeIcon,\n      'tab-searchbar': () => import('./components/TableView'),\n  },\n  data: function() {\n      return {\n          fridge,\n          filterObject,\n          searchResult,\n          searchQuery,\n          currentTab,\n          numExpired,\n          nameSet,\n          storeSet,\n          typeSet,\n          searchIcon: '\\uf002',\n          display,\n          reverseFlags,\n          wipeChildState,\n          aggregateFlag,\n          aggregationObject,\n      }\n  },\n  created: function() {\n      let files = [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9];\n      for (let file of files){\n          for (let item of file){\n              let parsedPurchaseDate = {\n                  year: item.purchaseDate.substring(0,4),\n                  month: item.purchaseDate.substring(5,7),\n                  day: item.purchaseDate.substring(8,10),\n                  ymd: item.purchaseDate.substring(0,10),\n              }\n              let parsedExpirationDate = {\n                  year: item.expirationDate.substring(0,4),\n                  month: item.expirationDate.substring(5,7),\n                  day: item.expirationDate.substring(8,10),\n                  ymd: item.expirationDate.substring(0,10),\n              }\n              let expiredFlag = false;\n              let yearCheck = parsedPurchaseDate.year > parsedExpirationDate.year;\n              let monthCheck = parsedPurchaseDate.month > parsedExpirationDate.month;\n              let dayCheck = parsedPurchaseDate.day > parsedExpirationDate.day;\n              if (yearCheck){\n                  expiredFlag = true;\n                  this.numExpired++;\n              }else if (\n                  parsedPurchaseDate.year == parsedExpirationDate.year &&\n                  monthCheck\n              ){\n                  expiredFlag = true;\n                  this.numExpired++;\n              }else if (\n                  parsedPurchaseDate.year == parsedExpirationDate.year &&\n                  parsedPurchaseDate.month == parsedExpirationDate.month &&\n                  dayCheck\n              ){\n                  expiredFlag = true;\n                  this.numExpired++;\n              }\n              this.fridge.push({\n                  name: item.name,\n                  type: item.type,\n                  store: item.store,\n                  purchaseDate: item.purchaseDate.substring(0,10),\n                  expirationDate: item.expirationDate.substring(0,10),\n                  quantity: item.quantity,\n                  expired: expiredFlag\n              });\n              nameSet.add(item.name.toLowerCase());\n              storeSet.add(item.store.toLowerCase());\n              typeSet.add(item.type.toLowerCase());\n              if (!this.aggregationObject.hasOwnProperty(parsedPurchaseDate.ymd)){\n                  this.aggregationObject[parsedPurchaseDate.ymd] = {};\n                  this.aggregationObject[parsedPurchaseDate.ymd][item.name] = {\n                      name: item.name,\n                      type: item.type,\n                      store: '-',\n                      purchaseDate: parsedPurchaseDate.ymd,\n                      expirationDate: '-',\n                      quantity: item.quantity,\n                      expired: '-',\n                  }\n              } else {\n                  if (this.aggregationObject[parsedPurchaseDate.ymd].hasOwnProperty(item.name)){\n                      this.aggregationObject[parsedPurchaseDate.ymd][item.name].quantity += item.quantity;\n                  } else {\n                      this.aggregationObject[parsedPurchaseDate.ymd][item.name] = {\n                          name: item.name,\n                          type: item.type,\n                          store: '-',\n                          purchaseDate: parsedPurchaseDate.ymd,\n                          expirationDate: '-',\n                          quantity: item.quantity,\n                          expired: '-',\n                      };\n                  }\n              }\n          }\n      }\n      this.searchResult = this.fridge;\n      this.reverseFlags = Object.assign({}, this.reverseFlags, {\n          name: false,\n          type: false,\n          store: false,\n          purchaseDate: false,\n          expirationDate: false,\n          quantity: false,\n          expired: false\n      })\n  },\n  mounted: function(){\n      document.getElementById('infScroll').addEventListener('scroll', this.scroll);\n  },\n  destroyed: function(){\n      document.getElementById('infScroll').removeEventListener('scroll', this.scroll);\n  },\n  methods: {\n      objectPropsToArray: function(inputObject, currentLevel){\n          if (Array.isArray(inputObject)){\n              return inputObject;\n          }\n          if (inputObject.hasOwnProperty('expired')){\n              return [inputObject];\n          }\n          let inputAsArray = [];\n          let filterType = this.filterObject['filterOrder'][currentLevel];\n          if (this.reverseFlags[filterType]){\n              currentLevel++;\n              for (let property of Object.keys(inputObject).sort(collator.compare).reverse()){\n                  if (!Array.isArray(property)){\n                      inputAsArray = inputAsArray.concat(this.objectPropsToArray(inputObject[property], currentLevel));\n                  } else {\n                      inputAsArray = inputAsArray.concat(inputObject[property]);\n                  }\n              }\n          } else {\n              currentLevel++;\n              for (let property of Object.keys(inputObject).sort(collator.compare)){\n                  if (!Array.isArray(property)){\n                      if (Object.values(property))\n                      inputAsArray = inputAsArray.concat(this.objectPropsToArray(inputObject[property], currentLevel));\n                  } else {\n                      inputAsArray = inputAsArray.concat(inputObject[property]);\n                  }\n              }\n          }\n          return inputAsArray;\n      },\n      clearAllFilters: function(){\n          this.filterObject['filterOrder'].splice(0);\n          this.searchQuery = '';\n          this.display = 100;\n          this.wipeChildState = true;\n          this.aggregateFlag = false;\n          this.sliced = this.fridge;\n      },\n      processAggregate: function(){\n          this.aggregateFlag = true;\n      },\n      processSortEvent: function(inputEvent){\n          this.reverseFlags[inputEvent.from] = (inputEvent.state == 0) ? true:false;\n      },\n      processFilterEvent: function(inputEvent){\n          if (this.filterObject['filterOrder'].length == 0){\n              this.filterObject['filterOrder'] = [inputEvent];\n              return;\n          } else {\n              for (let i of this.filterObject['filterOrder']){\n                  if (inputEvent == i){\n                      return;\n                  }\n              }\n              this.filterObject['filterOrder'].push(inputEvent);\n          }\n      },\n      broadFilter: function(inputArray, particularFilter){\n          let filteredObject = {};\n          if (Array.isArray(inputArray)){\n              for (let item of inputArray){\n                  if (!filteredObject.hasOwnProperty(item[particularFilter])){\n                      filteredObject[item[particularFilter]] = [item];\n                  } else {\n                      filteredObject[item[particularFilter]].push(item);\n                  }\n              }\n          } else {\n              for (let property in inputArray){\n                  filteredObject[property] = this.broadFilter(inputArray[property], particularFilter);\n              }\n          }\n          return filteredObject;\n      },\n      filterManager: function(overrideArray = []){\n          let filtered = [];\n          let tempFiltered = {};\n          let hasBeenFiltered = false;\n          let overrideFlag = false;\n          let numberFiltersApplied = 0;\n\n          if (overrideArray.length > 0){\n              overrideFlag = true;\n          }\n          if (this.filterObject['filterOrder'].length == 0){\n              if (overrideFlag){\n                  filtered = overrideArray;\n              } else {\n                  filtered = this.fridge;\n              }\n              return filtered;\n          }\n\n          while(this.filterObject['filterOrder'].length - numberFiltersApplied > 0){\n              let filterType = this.filterObject['filterOrder'][numberFiltersApplied];\n              if (!hasBeenFiltered){\n                  if (overrideFlag){\n                      tempFiltered = this.broadFilter(overrideArray, filterType);\n                  } else {\n                      tempFiltered = this.broadFilter(this.fridge, filterType);\n                  }\n                  hasBeenFiltered = true;\n              } else {\n                  for (let property in tempFiltered){\n                      let tempProp = this.broadFilter(tempFiltered[property], filterType);\n                      Vue.set(tempFiltered, property, tempProp);\n                  }\n              }\n              numberFiltersApplied++;\n          }\n          filtered = this.objectPropsToArray(tempFiltered, 0);\n          return filtered;\n      },\n      updateTab: function(newTab){\n          this.currentTab = newTab;\n      },\n      scroll () {\n          let element = document.getElementById('infScroll');\n          let offset = 300;\n          if (element.clientHeight + element.scrollTop >= element.scrollHeight - offset) {\n              this.display = this.display + 20;\n          }\n      },\n  },\n  computed: {\n      sliced: {\n          get: function(){\n              return this.filterManager(this.searchResult).slice(0, this.display);\n          },\n          set: function(inputArray){\n              this.searchResult = inputArray;\n          }\n      },\n      currentTabComponent: function(){\n          return 'tab-' + this.currentTab;\n      }\n  },\n  watch: {\n      searchQuery: function(){\n          let lowerSQ = this.searchQuery.toLowerCase();\n          let searchSubset = {};\n          if (lowerSQ.length == 0){\n              this.sliced = this.fridge;\n          } else if (this.nameSet.has(lowerSQ)){\n              for (let item of this.fridge){\n                  if (item.name.toLowerCase() == lowerSQ){\n                      if (!searchSubset.hasOwnProperty(item.name.toLowerCase())){\n                          searchSubset[item.name.toLowerCase()] = [item];\n                      } else {\n                          searchSubset[item.name.toLowerCase()].push(item);\n                      }\n                  }\n              }\n              this.sliced = searchSubset[lowerSQ];\n          } else if (this.storeSet.has(lowerSQ)){\n              for (let item of this.fridge){\n                  if (item.store.toLowerCase() == lowerSQ){\n                      if (!searchSubset.hasOwnProperty(item.store.toLowerCase())){\n                          searchSubset[item.store.toLowerCase()] = [item];\n                      } else {\n                          searchSubset[item.store.toLowerCase()].push(item);\n                      }\n                  }\n              }\n              this.sliced = searchSubset[lowerSQ];\n          } else if (this.typeSet.has(lowerSQ)){\n              for (let item of this.fridge){\n                  if (item.type.toLowerCase() == lowerSQ){\n                      if (!searchSubset.hasOwnProperty(item.type.toLowerCase())){\n                          searchSubset[item.type.toLowerCase()] = [item];\n                      } else {\n                          searchSubset[item.type.toLowerCase()].push(item);\n                      }\n                  }\n              }\n              this.sliced = searchSubset[lowerSQ];\n          } else {\n              // console.log('no matching search item :(');\n          }\n      },\n      aggregateFlag: function(){\n          if (this.aggregateFlag){\n              this.sliced = this.objectPropsToArray(this.aggregationObject, 0);\n          }\n      },\n  },\n}\n</script>\n<style>\n#app {\n    width: 100%;\n    height: 100%;\n    min-height: 800px;\n    font-family: 'Avenir', Helvetica, Arial, sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    text-align: center;\n    color: #000;\n    background-color: #fafafa;\n    margin-bottom: 0;\n}\n.nav {\n    width: 100%;\n    height: 50px;\n    background-color: #fff;\n    border-bottom: 1px solid #c7c7c7;\n    padding: 5px 0;\n}\n.proj-title{\n    color: #000;\n    display: inline-block;\n    float: left;\n    margin-left: 30px;\n    border-right: 1px solid black;\n    padding-right: 6px;\n}\n.clear-filter{\n    margin-top: 16px;\n    display: inline-block;\n    float: left;\n    -webkit-border-radius: 5px;\n    -moz-border-radius: 5px;\n    border-radius: 5px;\n}\n.clear-filter:focus,\n.clear-filter:hover{\n    background-color: #cfd8dc;\n    border: 1px solid #4fc3f7;\n    outline: 0;\n}\n.caution-span{\n    margin-top: 14px;\n    margin-right: 40px;\n    display: inline-block;\n    float: right;\n    color: #ef5350;\n}\n.search-bar{\n    display: inline-block;\n    width: 250px;\n    vertical-align: middle;\n    margin-top: 8px;\n    margin-left: -10px;\n    float: left;\n    white-space: nowrap;\n    position: relative;\n}\n.search-bar input{\n    width: 160px;\n    height: 35px;\n    background: #eceff1;\n    border: none;\n    font-size: 10pt;\n    color: #63717f;\n    padding-left: 35px;\n    -webkit-border-radius: 5px;\n    -moz-border-radius: 5px;\n    border-radius: 5px;\n}\n.search-bar input:focus,\n.search-bar input:hover{\n    background-color: #cfd8dc;\n    border: 1px solid #4fc3f7;\n    outline: 0;\n}\n.search-bar input::-webkit-input-placeholder {\n   color: #65737e;\n}\n.search-bar input:-moz-placeholder {\n   color: #65737e;\n}\n.search-bar input::-moz-placeholder {\n   color: #65737e;\n}\n.search-bar input:-ms-input-placeholder {\n   color: #65737e;\n}\n.search-bar .icon{\n    position: absolute;\n    margin-left: 10px;\n    margin-top: 9px;\n    z-index: 1;\n    color: #82b3c9;\n}\n.tile{\n    height: 40px;\n    width: 120px;\n    margin: 5px 15px;\n    display: inline-block;\n}\n.tile.tab{\n    color: #000;\n}\n.tab{\n    height: 780px;\n    width: 100%;\n    min-height: 600px;\n    margin: 0;\n    display: inline-block;\n}\n.container{\n    height: 100%;\n    width: 100%;\n    overflow: auto;\n    background-color: #fafafa;\n}\n.quantity-by-food{\n    width: 330px;\n    height: 500px;\n    overflow: auto;\n    display: inline-block;\n    vertical-align: top;\n    text-align: left;\n    border: 1px solid black;\n}\n.filter-button{\n    background: #eeeeee;\n    border: none;\n    -webkit-border-radius: 5px;\n    -moz-border-radius: 5px;\n    border-radius: 5px;\n\n}\n.filter-button:focus,\n.filter-button:hover{\n    background-color: #cfd8dc;\n    border: 1px solid #4fc3f7;\n    outline: 0;\n}\nhtml,\nbody {\n    margin: 0;\n    padding: 0;\n}\n</style>\n"],"sourceRoot":"src"}]}