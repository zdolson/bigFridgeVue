{"remainingRequest":"/Users/zachary/Documents/Projects/big-fridge-vue/big-fridge/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zachary/Documents/Projects/big-fridge-vue/big-fridge/src/components/TableView.vue?vue&type=style&index=0&id=aad96bda&scoped=true&lang=css&","dependencies":[{"path":"/Users/zachary/Documents/Projects/big-fridge-vue/big-fridge/src/components/TableView.vue","mtime":1539726931358},{"path":"/Users/zachary/Documents/Projects/big-fridge-vue/big-fridge/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/zachary/Documents/Projects/big-fridge-vue/big-fridge/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/zachary/Documents/Projects/big-fridge-vue/big-fridge/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zachary/Documents/Projects/big-fridge-vue/big-fridge/node_modules/cache-loader/dist/cjs.js","mtime":1539726978099},{"path":"/Users/zachary/Documents/Projects/big-fridge-vue/big-fridge/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.fixed-table-header{\n    position: sticky;\n    top: 0;\n    background-color: #90a4ae;\n    display: block;\n}\n\ntbody, thead tr {\n    display: table;\n    width: 100%;\n    table-layout: fixed;\n}\n",{"version":3,"sources":["TableView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4NA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"TableView.vue","sourceRoot":"src/components","sourcesContent":["<script>\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\n\nvar sortStates = {};\nvar numericFilters = new Set();\n\nexport default {\n    data: function () {\n      return {\n          filters: ['name', 'quantity', 'store', 'type', 'purchaseDate', 'expirationDate', 'expired'],\n          numericFilters,\n          sortNumImgs: [\"sort-numeric-up\", \"sort-numeric-down\", \"sort\"],\n          sortAlphaImgs: [\"sort-alpha-up\", \"sort-alpha-down\", \"sort\"],\n          sortStates,\n      }\n    },\n    components: {\n        'font-awesome-icon': FontAwesomeIcon,\n    },\n    created: function(){\n        this.numericFilters.add('quantity');\n        this.numericFilters.add('purchaseDate');\n        this.numericFilters.add('expirationDate');\n        for (let filter of this.filters){\n            if (this.numericFilters.has(filter)){\n                this.sortStates = Object.assign({}, this.sortStates, {\n                    [filter]: {\n                        state: 2,\n                        img: this.sortNumImgs[2],\n                    }\n                })\n            } else {\n                this.sortStates = Object.assign({}, this.sortStates, {\n                    [filter]: {\n                        state: 2,\n                        img: this.sortAlphaImgs[2],\n                    }\n                })\n            }\n        }\n    },\n    methods: {\n        fireMessage: function(input){\n            this.$emit('apply-filter', input);\n             //designed to avoid going back to original state.\n            this.sortStates[input].state = (this.sortStates[input].state + 1) % 2;\n            if (this.numericFilters.has(input)) this.sortStates[input].img = this.sortNumImgs[this.sortStates[input].state];\n            else this.sortStates[input].img = this.sortAlphaImgs[this.sortStates[input].state];\n            this.$emit('apply-sort', {\n                state: this.sortStates[input].state,\n                from: input,\n            });\n        },\n        aggregate: function(){\n            this.$emit('apply-aggregate');\n        }\n    },\n    computed: {\n        nameImg: {\n            get: function(){\n                return this.sortStates['name'].img;\n            }\n        },\n        quantityImg: {\n            get: function(){\n                return this.sortStates['quantity'].img;\n            }\n        },\n        storeImg: {\n            get: function(){\n                return this.sortStates['store'].img;\n            }\n        },\n        typeImg: {\n            get: function(){\n                return this.sortStates['type'].img;\n            }\n        },\n        purchaseDateImg: {\n            get: function(){\n                return this.sortStates['purchaseDate'].img;\n            }\n        },\n        expirationDateImg: {\n            get: function(){\n                return this.sortStates['expirationDate'].img;\n            }\n        },\n        expiredImg: {\n            get: function(){\n                return this.sortStates['expired'].img;\n            }\n        }\n    },\n    watch: {\n        clear: function(){\n            if (this.clear){\n                for (let filter of this.filters){\n                    if (this.numericFilters.has(filter)){\n                        this.sortStates = Object.assign({}, this.sortStates, {\n                            [filter]: {\n                                state: 2,\n                                img: this.sortNumImgs[2],\n                            }\n                        })\n                    } else {\n                        this.sortStates = Object.assign({}, this.sortStates, {\n                            [filter]: {\n                                state: 2,\n                                img: this.sortAlphaImgs[2],\n                            }\n                        })\n                    }\n                }\n                this.$emit('wiped-states');\n            }\n        }\n    },\n    props: ['inputArray', 'clear'],\n}\n\n</script>\n\n<template>\n\n    <div class=\"tile\">\n        <table>\n            <thead class=\"fixed-table-header\">\n                <tr>\n                    <th>\n                        <button\n                        class=\"filter-button\"\n                        @click=\"fireMessage('name')\"\n                        >Name <font-awesome-icon\n                            :icon=\"nameImg\"\n                            ></font-awesome-icon>\n                        </button>\n                    </th>\n                    <th>\n                        <button class=\"filter-button\"\n                        @click=\"fireMessage('quantity')\"\n                        style=\"margin-right: 3px;\"\n                        >Quantity <font-awesome-icon\n                            :icon=\"quantityImg\"\n                            ></font-awesome-icon>\n                        </button>\n                        <button\n                        class=\"filter-button\"\n                        @click=\"aggregate()\"\n                        >Aggregate <font-awesome-icon\n                            icon=\"plus\"\n                            ></font-awesome-icon>\n                        </button>\n                    </th>\n                    <th>\n                        <button class=\"filter-button\"\n                            @click=\"fireMessage('store')\"\n                            >Store <font-awesome-icon\n                                :icon=\"storeImg\"\n                                ></font-awesome-icon>\n                        </button>\n                    </th>\n                    <th>\n                        <button class=\"filter-button\"\n                            @click=\"fireMessage('type')\"\n                            >Type <font-awesome-icon\n                                :icon=\"typeImg\"\n                                ></font-awesome-icon>\n                        </button>\n                    </th>\n                    <th>\n                        <button class=\"filter-button\"\n                            @click=\"fireMessage('purchaseDate')\"\n                            >Purchase Date <font-awesome-icon\n                                :icon=\"purchaseDateImg\"\n                                ></font-awesome-icon>\n                        </button>\n                    </th>\n                    <th>\n                        <button class=\"filter-button\"\n                            @click=\"fireMessage('expirationDate')\"\n                            >Expiration Date <font-awesome-icon\n                                :icon=\"expirationDateImg\"\n                                ></font-awesome-icon></button></th>\n                    <th>\n                        <button class=\"filter-button\"\n                            @click=\"fireMessage('expired')\"\n                            >Expired? <font-awesome-icon\n                                :icon=\"expiredImg\"\n                                ></font-awesome-icon>\n                        </button>\n                    </th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr v-for=\"(item, index) in inputArray\" :key=\"index\">\n                    <td>{{item.name}}</td>\n                    <td>{{item.quantity}}</td>\n                    <td>{{item.store}}</td>\n                    <td>{{item.type}}</td>\n                    <td>{{item.purchaseDate}}</td>\n                    <td>{{item.expirationDate}}</td>\n                    <td><font-awesome-icon\n                        :icon=\"item.expired=='-' ?\n                            'slash' :\n                            (item.expired ?\n                                'skull' :\n                                'thumbs-up'\n                            )\"\n                        ></font-awesome-icon>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n\n</template>\n\n<style scoped>\n\n.fixed-table-header{\n    position: sticky;\n    top: 0;\n    background-color: #90a4ae;\n    display: block;\n}\n\ntbody, thead tr {\n    display: table;\n    width: 100%;\n    table-layout: fixed;\n}\n</style>\n"]}]}